info:
  component: Admin Server
  instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${spring.cloud.client.ip-address}}:${server.port}}

server:
  port: 8080
  # Let spring-boot's ForwardedHeaderFilter take care of reflecting the client-originated protocol and address in the HttpServletRequest  
  forward-headers-strategy: framework
  servlet.context-path: /
spring:
  config:
    import:
# import definition of common bootstrap configuration profiles    
    - classpath:gs_cloud_bootstrap_profiles.yml
# load externalized configuration from admin-service.yml
    name: admin-service
  cloud.config.name: admin-service
  main:
    banner-mode: off
    allow-bean-definition-overriding: true
  application:
    name: admin-service
  cloud:
    config:
      enabled: false # config-server client disabled by deafult, use config_first or discovery_first profile to enable it
      fail-fast: true
      retry.max-attempts: 20
      discovery:
        # discovery-first config mode disabled by default, use the discovery_first profile to enable it
        enabled: false
        service-id: config-service

# override default of false, this service uses the registry (when eureka client is enabled)
eureka.client.fetch-registry: true

management:
  endpoints:
    enabled-by-default: true
    web.exposure.include: "*"
  endpoint:
    info.enabled: true
    metrics.enabled: true
    shutdown.enabled: true
    health:
      enabled: true
      probes.enabled: true
      show-details: always
  metrics:
    enable:
      all: true
    export:
      atlas.enabled: false

---
# local profile, used for development only. Other settings like config and eureka urls in gs_cloud_bootstrap_profiles.yml
spring.config.activate.on-profile: local
server.port: 9091
